// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.1
// source: api/board_v1/service.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetBoard
type GetRequestBoard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdBoard uint32 `protobuf:"varint,1,opt,name=id_board,json=idBoard,proto3" json:"id_board,omitempty"`
}

func (x *GetRequestBoard) Reset() {
	*x = GetRequestBoard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestBoard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestBoard) ProtoMessage() {}

func (x *GetRequestBoard) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestBoard.ProtoReflect.Descriptor instead.
func (*GetRequestBoard) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetRequestBoard) GetIdBoard() uint32 {
	if x != nil {
		return x.IdBoard
	}
	return 0
}

type GetResponseBoard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Board *Boards `protobuf:"bytes,1,opt,name=board,proto3" json:"board,omitempty"`
}

func (x *GetResponseBoard) Reset() {
	*x = GetResponseBoard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponseBoard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponseBoard) ProtoMessage() {}

func (x *GetResponseBoard) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponseBoard.ProtoReflect.Descriptor instead.
func (*GetResponseBoard) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetResponseBoard) GetBoard() *Boards {
	if x != nil {
		return x.Board
	}
	return nil
}

// GetTask
type GetRequestTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdTask uint32 `protobuf:"varint,1,opt,name=id_task,json=idTask,proto3" json:"id_task,omitempty"`
}

func (x *GetRequestTask) Reset() {
	*x = GetRequestTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestTask) ProtoMessage() {}

func (x *GetRequestTask) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestTask.ProtoReflect.Descriptor instead.
func (*GetRequestTask) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetRequestTask) GetIdTask() uint32 {
	if x != nil {
		return x.IdTask
	}
	return 0
}

type GetResponseTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task *Tasks `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *GetResponseTask) Reset() {
	*x = GetResponseTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponseTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponseTask) ProtoMessage() {}

func (x *GetResponseTask) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponseTask.ProtoReflect.Descriptor instead.
func (*GetResponseTask) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetResponseTask) GetTask() *Tasks {
	if x != nil {
		return x.Task
	}
	return nil
}

// GetTasks
type GetRequestTasks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdColumn uint32 `protobuf:"varint,1,opt,name=id_column,json=idColumn,proto3" json:"id_column,omitempty"`
}

func (x *GetRequestTasks) Reset() {
	*x = GetRequestTasks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestTasks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestTasks) ProtoMessage() {}

func (x *GetRequestTasks) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestTasks.ProtoReflect.Descriptor instead.
func (*GetRequestTasks) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetRequestTasks) GetIdColumn() uint32 {
	if x != nil {
		return x.IdColumn
	}
	return 0
}

type GetResponseTasks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*Tasks `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *GetResponseTasks) Reset() {
	*x = GetResponseTasks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponseTasks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponseTasks) ProtoMessage() {}

func (x *GetResponseTasks) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponseTasks.ProtoReflect.Descriptor instead.
func (*GetResponseTasks) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetResponseTasks) GetTasks() []*Tasks {
	if x != nil {
		return x.Tasks
	}
	return nil
}

// GetSubtasks
type GetRequestSubtasks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdTask uint32 `protobuf:"varint,1,opt,name=id_task,json=idTask,proto3" json:"id_task,omitempty"`
}

func (x *GetRequestSubtasks) Reset() {
	*x = GetRequestSubtasks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestSubtasks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestSubtasks) ProtoMessage() {}

func (x *GetRequestSubtasks) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestSubtasks.ProtoReflect.Descriptor instead.
func (*GetRequestSubtasks) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetRequestSubtasks) GetIdTask() uint32 {
	if x != nil {
		return x.IdTask
	}
	return 0
}

type GetResponseSubtasks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subtasks []*Subtasks `protobuf:"bytes,1,rep,name=subtasks,proto3" json:"subtasks,omitempty"`
}

func (x *GetResponseSubtasks) Reset() {
	*x = GetResponseSubtasks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponseSubtasks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponseSubtasks) ProtoMessage() {}

func (x *GetResponseSubtasks) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponseSubtasks.ProtoReflect.Descriptor instead.
func (*GetResponseSubtasks) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetResponseSubtasks) GetSubtasks() []*Subtasks {
	if x != nil {
		return x.Subtasks
	}
	return nil
}

// Userboard
type GetRequestUserAtBoard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdBoard uint32 `protobuf:"varint,1,opt,name=id_board,json=idBoard,proto3" json:"id_board,omitempty"`
}

func (x *GetRequestUserAtBoard) Reset() {
	*x = GetRequestUserAtBoard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestUserAtBoard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestUserAtBoard) ProtoMessage() {}

func (x *GetRequestUserAtBoard) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestUserAtBoard.ProtoReflect.Descriptor instead.
func (*GetRequestUserAtBoard) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetRequestUserAtBoard) GetIdBoard() uint32 {
	if x != nil {
		return x.IdBoard
	}
	return 0
}

type GetResponseUserAtBoard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userboard []*UsersBoard `protobuf:"bytes,1,rep,name=userboard,proto3" json:"userboard,omitempty"`
}

func (x *GetResponseUserAtBoard) Reset() {
	*x = GetResponseUserAtBoard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponseUserAtBoard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponseUserAtBoard) ProtoMessage() {}

func (x *GetResponseUserAtBoard) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponseUserAtBoard.ProtoReflect.Descriptor instead.
func (*GetResponseUserAtBoard) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetResponseUserAtBoard) GetUserboard() []*UsersBoard {
	if x != nil {
		return x.Userboard
	}
	return nil
}

// Column
type GetRequestColumns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdBoard uint32 `protobuf:"varint,1,opt,name=id_board,json=idBoard,proto3" json:"id_board,omitempty"`
}

func (x *GetRequestColumns) Reset() {
	*x = GetRequestColumns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestColumns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestColumns) ProtoMessage() {}

func (x *GetRequestColumns) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestColumns.ProtoReflect.Descriptor instead.
func (*GetRequestColumns) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetRequestColumns) GetIdBoard() uint32 {
	if x != nil {
		return x.IdBoard
	}
	return 0
}

type GetResponseColumns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Columns []*Columns `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
}

func (x *GetResponseColumns) Reset() {
	*x = GetResponseColumns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponseColumns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponseColumns) ProtoMessage() {}

func (x *GetResponseColumns) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponseColumns.ProtoReflect.Descriptor instead.
func (*GetResponseColumns) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetResponseColumns) GetColumns() []*Columns {
	if x != nil {
		return x.Columns
	}
	return nil
}

type GetRequestComments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdTask    uint32 `protobuf:"varint,1,opt,name=id_task,json=idTask,proto3" json:"id_task,omitempty"`
	IdSubtask uint32 `protobuf:"varint,2,opt,name=id_subtask,json=idSubtask,proto3" json:"id_subtask,omitempty"`
}

func (x *GetRequestComments) Reset() {
	*x = GetRequestComments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestComments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestComments) ProtoMessage() {}

func (x *GetRequestComments) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestComments.ProtoReflect.Descriptor instead.
func (*GetRequestComments) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetRequestComments) GetIdTask() uint32 {
	if x != nil {
		return x.IdTask
	}
	return 0
}

func (x *GetRequestComments) GetIdSubtask() uint32 {
	if x != nil {
		return x.IdSubtask
	}
	return 0
}

type GetResponseComments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments []*Comments `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
}

func (x *GetResponseComments) Reset() {
	*x = GetResponseComments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponseComments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponseComments) ProtoMessage() {}

func (x *GetResponseComments) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponseComments.ProtoReflect.Descriptor instead.
func (*GetResponseComments) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetResponseComments) GetComments() []*Comments {
	if x != nil {
		return x.Comments
	}
	return nil
}

type GetRequestStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdStatuses uint32 `protobuf:"varint,1,opt,name=id_statuses,json=idStatuses,proto3" json:"id_statuses,omitempty"`
}

func (x *GetRequestStatus) Reset() {
	*x = GetRequestStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestStatus) ProtoMessage() {}

func (x *GetRequestStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestStatus.ProtoReflect.Descriptor instead.
func (*GetRequestStatus) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetRequestStatus) GetIdStatuses() uint32 {
	if x != nil {
		return x.IdStatuses
	}
	return 0
}

type GetResponseStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *Statuses `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *GetResponseStatus) Reset() {
	*x = GetResponseStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponseStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponseStatus) ProtoMessage() {}

func (x *GetResponseStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponseStatus.ProtoReflect.Descriptor instead.
func (*GetResponseStatus) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetResponseStatus) GetStatus() *Statuses {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetRequestStatuses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdStatuses uint32 `protobuf:"varint,1,opt,name=id_statuses,json=idStatuses,proto3" json:"id_statuses,omitempty"`
}

func (x *GetRequestStatuses) Reset() {
	*x = GetRequestStatuses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestStatuses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestStatuses) ProtoMessage() {}

func (x *GetRequestStatuses) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestStatuses.ProtoReflect.Descriptor instead.
func (*GetRequestStatuses) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{16}
}

func (x *GetRequestStatuses) GetIdStatuses() uint32 {
	if x != nil {
		return x.IdStatuses
	}
	return 0
}

type GetResponseStatuses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status []*Statuses `protobuf:"bytes,1,rep,name=status,proto3" json:"status,omitempty"`
}

func (x *GetResponseStatuses) Reset() {
	*x = GetResponseStatuses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponseStatuses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponseStatuses) ProtoMessage() {}

func (x *GetResponseStatuses) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponseStatuses.ProtoReflect.Descriptor instead.
func (*GetResponseStatuses) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetResponseStatuses) GetStatus() []*Statuses {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetRequestReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdReport uint32 `protobuf:"varint,1,opt,name=id_report,json=idReport,proto3" json:"id_report,omitempty"`
}

func (x *GetRequestReport) Reset() {
	*x = GetRequestReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestReport) ProtoMessage() {}

func (x *GetRequestReport) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestReport.ProtoReflect.Descriptor instead.
func (*GetRequestReport) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{18}
}

func (x *GetRequestReport) GetIdReport() uint32 {
	if x != nil {
		return x.IdReport
	}
	return 0
}

type GetResponseReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Report *Reports `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"`
}

func (x *GetResponseReport) Reset() {
	*x = GetResponseReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponseReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponseReport) ProtoMessage() {}

func (x *GetResponseReport) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponseReport.ProtoReflect.Descriptor instead.
func (*GetResponseReport) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{19}
}

func (x *GetResponseReport) GetReport() *Reports {
	if x != nil {
		return x.Report
	}
	return nil
}

type GetRequestRoles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdRole uint32 `protobuf:"varint,1,opt,name=id_role,json=idRole,proto3" json:"id_role,omitempty"`
}

func (x *GetRequestRoles) Reset() {
	*x = GetRequestRoles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequestRoles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequestRoles) ProtoMessage() {}

func (x *GetRequestRoles) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequestRoles.ProtoReflect.Descriptor instead.
func (*GetRequestRoles) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetRequestRoles) GetIdRole() uint32 {
	if x != nil {
		return x.IdRole
	}
	return 0
}

type GetResponseRoles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles []*Roles `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty"`
}

func (x *GetResponseRoles) Reset() {
	*x = GetResponseRoles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponseRoles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponseRoles) ProtoMessage() {}

func (x *GetResponseRoles) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponseRoles.ProtoReflect.Descriptor instead.
func (*GetResponseRoles) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetResponseRoles) GetRoles() []*Roles {
	if x != nil {
		return x.Roles
	}
	return nil
}

type Boards struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdBoard uint32 `protobuf:"varint,1,opt,name=id_board,json=idBoard,proto3" json:"id_board,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Private bool   `protobuf:"varint,3,opt,name=private,proto3" json:"private,omitempty"`
}

func (x *Boards) Reset() {
	*x = Boards{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Boards) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Boards) ProtoMessage() {}

func (x *Boards) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Boards.ProtoReflect.Descriptor instead.
func (*Boards) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{22}
}

func (x *Boards) GetIdBoard() uint32 {
	if x != nil {
		return x.IdBoard
	}
	return 0
}

func (x *Boards) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Boards) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

type Tasks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdTask      uint32                 `protobuf:"varint,1,opt,name=id_task,json=idTask,proto3" json:"id_task,omitempty"`
	IdColumn    uint32                 `protobuf:"varint,2,opt,name=id_column,json=idColumn,proto3" json:"id_column,omitempty"`
	Name        string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	StartDate   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Priority    uint32                 `protobuf:"varint,6,opt,name=priority,proto3" json:"priority,omitempty"`
	Description string                 `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	IdStatus    uint32                 `protobuf:"varint,8,opt,name=id_status,json=idStatus,proto3" json:"id_status,omitempty"`
}

func (x *Tasks) Reset() {
	*x = Tasks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tasks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tasks) ProtoMessage() {}

func (x *Tasks) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tasks.ProtoReflect.Descriptor instead.
func (*Tasks) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{23}
}

func (x *Tasks) GetIdTask() uint32 {
	if x != nil {
		return x.IdTask
	}
	return 0
}

func (x *Tasks) GetIdColumn() uint32 {
	if x != nil {
		return x.IdColumn
	}
	return 0
}

func (x *Tasks) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Tasks) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Tasks) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *Tasks) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Tasks) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Tasks) GetIdStatus() uint32 {
	if x != nil {
		return x.IdStatus
	}
	return 0
}

type Subtasks struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdSubtask    uint32                 `protobuf:"varint,1,opt,name=id_subtask,json=idSubtask,proto3" json:"id_subtask,omitempty"`
	Name         string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	StartDate    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Priority     uint32                 `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	Descriptions string                 `protobuf:"bytes,6,opt,name=descriptions,proto3" json:"descriptions,omitempty"`
	IdStatus     uint32                 `protobuf:"varint,7,opt,name=id_status,json=idStatus,proto3" json:"id_status,omitempty"`
	IdTask       uint32                 `protobuf:"varint,8,opt,name=id_task,json=idTask,proto3" json:"id_task,omitempty"`
}

func (x *Subtasks) Reset() {
	*x = Subtasks{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subtasks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subtasks) ProtoMessage() {}

func (x *Subtasks) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subtasks.ProtoReflect.Descriptor instead.
func (*Subtasks) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{24}
}

func (x *Subtasks) GetIdSubtask() uint32 {
	if x != nil {
		return x.IdSubtask
	}
	return 0
}

func (x *Subtasks) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Subtasks) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Subtasks) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *Subtasks) GetPriority() uint32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Subtasks) GetDescriptions() string {
	if x != nil {
		return x.Descriptions
	}
	return ""
}

func (x *Subtasks) GetIdStatus() uint32 {
	if x != nil {
		return x.IdStatus
	}
	return 0
}

func (x *Subtasks) GetIdTask() uint32 {
	if x != nil {
		return x.IdTask
	}
	return 0
}

type UsersBoard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdUserBoard uint32 `protobuf:"varint,1,opt,name=id_user_board,json=idUserBoard,proto3" json:"id_user_board,omitempty"`
	IdRole      uint32 `protobuf:"varint,2,opt,name=id_role,json=idRole,proto3" json:"id_role,omitempty"`
	IdBoard     uint32 `protobuf:"varint,3,opt,name=id_board,json=idBoard,proto3" json:"id_board,omitempty"`
	IdUser      uint32 `protobuf:"varint,4,opt,name=id_user,json=idUser,proto3" json:"id_user,omitempty"`
}

func (x *UsersBoard) Reset() {
	*x = UsersBoard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersBoard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersBoard) ProtoMessage() {}

func (x *UsersBoard) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersBoard.ProtoReflect.Descriptor instead.
func (*UsersBoard) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{25}
}

func (x *UsersBoard) GetIdUserBoard() uint32 {
	if x != nil {
		return x.IdUserBoard
	}
	return 0
}

func (x *UsersBoard) GetIdRole() uint32 {
	if x != nil {
		return x.IdRole
	}
	return 0
}

func (x *UsersBoard) GetIdBoard() uint32 {
	if x != nil {
		return x.IdBoard
	}
	return 0
}

func (x *UsersBoard) GetIdUser() uint32 {
	if x != nil {
		return x.IdUser
	}
	return 0
}

type Comments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdComment   uint32 `protobuf:"varint,1,opt,name=id_comment,json=idComment,proto3" json:"id_comment,omitempty"`
	IdUserBoard uint32 `protobuf:"varint,2,opt,name=id_user_board,json=idUserBoard,proto3" json:"id_user_board,omitempty"`
	IdTask      uint32 `protobuf:"varint,3,opt,name=id_task,json=idTask,proto3" json:"id_task,omitempty"`
	IdSubtask   uint32 `protobuf:"varint,4,opt,name=id_subtask,json=idSubtask,proto3" json:"id_subtask,omitempty"`
	IdReport    uint32 `protobuf:"varint,5,opt,name=id_report,json=idReport,proto3" json:"id_report,omitempty"`
	Comment     string `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *Comments) Reset() {
	*x = Comments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Comments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comments) ProtoMessage() {}

func (x *Comments) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comments.ProtoReflect.Descriptor instead.
func (*Comments) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{26}
}

func (x *Comments) GetIdComment() uint32 {
	if x != nil {
		return x.IdComment
	}
	return 0
}

func (x *Comments) GetIdUserBoard() uint32 {
	if x != nil {
		return x.IdUserBoard
	}
	return 0
}

func (x *Comments) GetIdTask() uint32 {
	if x != nil {
		return x.IdTask
	}
	return 0
}

func (x *Comments) GetIdSubtask() uint32 {
	if x != nil {
		return x.IdSubtask
	}
	return 0
}

func (x *Comments) GetIdReport() uint32 {
	if x != nil {
		return x.IdReport
	}
	return 0
}

func (x *Comments) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type Statuses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdStatus uint32 `protobuf:"varint,1,opt,name=id_status,json=idStatus,proto3" json:"id_status,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Statuses) Reset() {
	*x = Statuses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Statuses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Statuses) ProtoMessage() {}

func (x *Statuses) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Statuses.ProtoReflect.Descriptor instead.
func (*Statuses) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{27}
}

func (x *Statuses) GetIdStatus() uint32 {
	if x != nil {
		return x.IdStatus
	}
	return 0
}

func (x *Statuses) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Reports struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdReport   uint32 `protobuf:"varint,1,opt,name=id_report,json=idReport,proto3" json:"id_report,omitempty"`
	ReportText string `protobuf:"bytes,2,opt,name=report_text,json=reportText,proto3" json:"report_text,omitempty"`
}

func (x *Reports) Reset() {
	*x = Reports{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reports) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reports) ProtoMessage() {}

func (x *Reports) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reports.ProtoReflect.Descriptor instead.
func (*Reports) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{28}
}

func (x *Reports) GetIdReport() uint32 {
	if x != nil {
		return x.IdReport
	}
	return 0
}

func (x *Reports) GetReportText() string {
	if x != nil {
		return x.ReportText
	}
	return ""
}

type Columns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdColumn uint32 `protobuf:"varint,1,opt,name=id_column,json=idColumn,proto3" json:"id_column,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IdBoard  uint32 `protobuf:"varint,3,opt,name=id_board,json=idBoard,proto3" json:"id_board,omitempty"`
}

func (x *Columns) Reset() {
	*x = Columns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Columns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Columns) ProtoMessage() {}

func (x *Columns) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Columns.ProtoReflect.Descriptor instead.
func (*Columns) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{29}
}

func (x *Columns) GetIdColumn() uint32 {
	if x != nil {
		return x.IdColumn
	}
	return 0
}

func (x *Columns) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Columns) GetIdBoard() uint32 {
	if x != nil {
		return x.IdBoard
	}
	return 0
}

type Roles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IdRole uint32 `protobuf:"varint,1,opt,name=id_role,json=idRole,proto3" json:"id_role,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Roles) Reset() {
	*x = Roles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_board_v1_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Roles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Roles) ProtoMessage() {}

func (x *Roles) ProtoReflect() protoreflect.Message {
	mi := &file_api_board_v1_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Roles.ProtoReflect.Descriptor instead.
func (*Roles) Descriptor() ([]byte, []int) {
	return file_api_board_v1_service_proto_rawDescGZIP(), []int{30}
}

func (x *Roles) GetIdRole() uint32 {
	if x != nil {
		return x.IdRole
	}
	return 0
}

func (x *Roles) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_api_board_v1_service_proto protoreflect.FileDescriptor

var file_api_board_v1_service_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x64, 0x5f, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x64, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x22, 0x3a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31,
	0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x22, 0x29,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x69, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x22, 0x36, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x23, 0x0a, 0x04,
	0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x04, 0x74, 0x61, 0x73,
	0x6b, 0x22, 0x2e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x22, 0x39, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x2d, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x75, 0x62, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x22, 0x45, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x75, 0x62, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e,
	0x53, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x22, 0x32, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x64, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69,
	0x64, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x22, 0x4c, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x12, 0x32, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x22, 0x2e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x64, 0x5f,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69, 0x64, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x22, 0x41, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x52, 0x07,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x22, 0x4c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x64, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x69, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x64, 0x5f, 0x73, 0x75, 0x62,
	0x74, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x64, 0x53, 0x75,
	0x62, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x45, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x08,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x33, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65,
	0x73, 0x22, 0x3f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x35, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x69,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x22, 0x41, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73,
	0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x65, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x2f, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x3e, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x2a, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x69, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x39, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x25, 0x0a,
	0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x05, 0x72,
	0x6f, 0x6c, 0x65, 0x73, 0x22, 0x51, 0x0a, 0x06, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x69, 0x64, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x69, 0x64, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0x9e, 0x02, 0x0a, 0x05, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x69, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64,
	0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69,
	0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x69, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa5, 0x02, 0x0a, 0x08, 0x53, 0x75, 0x62,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x64, 0x5f, 0x73, 0x75, 0x62, 0x74,
	0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x64, 0x53, 0x75, 0x62,
	0x74, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72,
	0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x74, 0x61,
	0x73, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x64, 0x54, 0x61, 0x73, 0x6b,
	0x22, 0x7d, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x22,
	0x0a, 0x0d, 0x69, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x64, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x69,
	0x64, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x22,
	0xbc, 0x01, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x69, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x69,
	0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x69, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x64, 0x5f, 0x73,
	0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x69, 0x64,
	0x53, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x64, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x3b,
	0x0a, 0x08, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x47, 0x0a, 0x07, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x72, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x64, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x54, 0x65, 0x78, 0x74, 0x22, 0x55, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x69, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x64, 0x5f, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x69, 0x64, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x22, 0x34, 0x0a, 0x05, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x64, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x69, 0x64, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x32, 0x9f, 0x0e, 0x0a, 0x07, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x56, 0x31, 0x12, 0x41, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x19, 0x2e, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x1a, 0x1a, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64,
	0x12, 0x3e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x18, 0x2e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x1a, 0x19, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x12, 0x41, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x19, 0x2e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x1a, 0x1a, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x12, 0x4a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x12, 0x1c, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x1a, 0x1d, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12,
	0x53, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x42, 0x6f, 0x61, 0x72,
	0x64, 0x12, 0x1f, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x42, 0x6f, 0x61,
	0x72, 0x64, 0x1a, 0x20, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x12, 0x47, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x73, 0x12, 0x1b, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x1a,
	0x1c, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x44, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x2e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x1b, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x4d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x65, 0x73, 0x1a, 0x1d, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x65, 0x73, 0x12, 0x49, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x12, 0x1c, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x1a, 0x1d,
	0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x12, 0x41, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x1a, 0x1a, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x73,
	0x12, 0x31, 0x0a, 0x09, 0x50, 0x75, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x11, 0x2e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73,
	0x1a, 0x11, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x50, 0x75, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x73, 0x12, 0x11, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x73, 0x1a, 0x11, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x50, 0x75, 0x74, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x12, 0x10, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x42,
	0x6f, 0x61, 0x72, 0x64, 0x73, 0x1a, 0x10, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31,
	0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x50, 0x75, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x0f, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x1a, 0x0f, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x50, 0x75, 0x74, 0x53, 0x75, 0x62, 0x74, 0x61,
	0x73, 0x6b, 0x12, 0x12, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x53, 0x75,
	0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x1a, 0x12, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76,
	0x31, 0x2e, 0x53, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x35, 0x0a, 0x0b, 0x50, 0x75,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x2e, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x12, 0x2e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x3c, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x12, 0x14, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x1a, 0x14, 0x2e, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12,
	0x31, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x11, 0x2e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x1a,
	0x11, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x12, 0x11, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x1a, 0x11, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x31, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x10, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31,
	0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x1a, 0x10, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f,
	0x76, 0x31, 0x2e, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x73, 0x12, 0x2b, 0x0a, 0x07, 0x41, 0x64, 0x64,
	0x54, 0x61, 0x73, 0x6b, 0x12, 0x0f, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x1a, 0x0f, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x34, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x53, 0x75, 0x62,
	0x74, 0x61, 0x73, 0x6b, 0x12, 0x12, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e,
	0x53, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x1a, 0x12, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x5f, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x35, 0x0a, 0x0b,
	0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x2e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a,
	0x12, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x43, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x12, 0x1b, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x44, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x41,
	0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x2e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x3f, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12,
	0x19, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x46, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x74,
	0x61, 0x73, 0x6b, 0x12, 0x1d, 0x2e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x75, 0x62, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_board_v1_service_proto_rawDescOnce sync.Once
	file_api_board_v1_service_proto_rawDescData = file_api_board_v1_service_proto_rawDesc
)

func file_api_board_v1_service_proto_rawDescGZIP() []byte {
	file_api_board_v1_service_proto_rawDescOnce.Do(func() {
		file_api_board_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_board_v1_service_proto_rawDescData)
	})
	return file_api_board_v1_service_proto_rawDescData
}

var file_api_board_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_api_board_v1_service_proto_goTypes = []interface{}{
	(*GetRequestBoard)(nil),        // 0: board_v1.GetRequestBoard
	(*GetResponseBoard)(nil),       // 1: board_v1.GetResponseBoard
	(*GetRequestTask)(nil),         // 2: board_v1.GetRequestTask
	(*GetResponseTask)(nil),        // 3: board_v1.GetResponseTask
	(*GetRequestTasks)(nil),        // 4: board_v1.GetRequestTasks
	(*GetResponseTasks)(nil),       // 5: board_v1.GetResponseTasks
	(*GetRequestSubtasks)(nil),     // 6: board_v1.GetRequestSubtasks
	(*GetResponseSubtasks)(nil),    // 7: board_v1.GetResponseSubtasks
	(*GetRequestUserAtBoard)(nil),  // 8: board_v1.GetRequestUserAtBoard
	(*GetResponseUserAtBoard)(nil), // 9: board_v1.GetResponseUserAtBoard
	(*GetRequestColumns)(nil),      // 10: board_v1.GetRequestColumns
	(*GetResponseColumns)(nil),     // 11: board_v1.GetResponseColumns
	(*GetRequestComments)(nil),     // 12: board_v1.GetRequestComments
	(*GetResponseComments)(nil),    // 13: board_v1.GetResponseComments
	(*GetRequestStatus)(nil),       // 14: board_v1.GetRequestStatus
	(*GetResponseStatus)(nil),      // 15: board_v1.GetResponseStatus
	(*GetRequestStatuses)(nil),     // 16: board_v1.GetRequestStatuses
	(*GetResponseStatuses)(nil),    // 17: board_v1.GetResponseStatuses
	(*GetRequestReport)(nil),       // 18: board_v1.GetRequestReport
	(*GetResponseReport)(nil),      // 19: board_v1.GetResponseReport
	(*GetRequestRoles)(nil),        // 20: board_v1.GetRequestRoles
	(*GetResponseRoles)(nil),       // 21: board_v1.GetResponseRoles
	(*Boards)(nil),                 // 22: board_v1.Boards
	(*Tasks)(nil),                  // 23: board_v1.Tasks
	(*Subtasks)(nil),               // 24: board_v1.Subtasks
	(*UsersBoard)(nil),             // 25: board_v1.UsersBoard
	(*Comments)(nil),               // 26: board_v1.Comments
	(*Statuses)(nil),               // 27: board_v1.Statuses
	(*Reports)(nil),                // 28: board_v1.Reports
	(*Columns)(nil),                // 29: board_v1.Columns
	(*Roles)(nil),                  // 30: board_v1.Roles
	(*timestamppb.Timestamp)(nil),  // 31: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),          // 32: google.protobuf.Empty
}
var file_api_board_v1_service_proto_depIdxs = []int32{
	22, // 0: board_v1.GetResponseBoard.board:type_name -> board_v1.Boards
	23, // 1: board_v1.GetResponseTask.task:type_name -> board_v1.Tasks
	23, // 2: board_v1.GetResponseTasks.tasks:type_name -> board_v1.Tasks
	24, // 3: board_v1.GetResponseSubtasks.subtasks:type_name -> board_v1.Subtasks
	25, // 4: board_v1.GetResponseUserAtBoard.userboard:type_name -> board_v1.UsersBoard
	29, // 5: board_v1.GetResponseColumns.columns:type_name -> board_v1.Columns
	26, // 6: board_v1.GetResponseComments.comments:type_name -> board_v1.Comments
	27, // 7: board_v1.GetResponseStatus.status:type_name -> board_v1.Statuses
	27, // 8: board_v1.GetResponseStatuses.status:type_name -> board_v1.Statuses
	28, // 9: board_v1.GetResponseReport.report:type_name -> board_v1.Reports
	30, // 10: board_v1.GetResponseRoles.roles:type_name -> board_v1.Roles
	31, // 11: board_v1.Tasks.start_date:type_name -> google.protobuf.Timestamp
	31, // 12: board_v1.Tasks.end_date:type_name -> google.protobuf.Timestamp
	31, // 13: board_v1.Subtasks.start_date:type_name -> google.protobuf.Timestamp
	31, // 14: board_v1.Subtasks.end_date:type_name -> google.protobuf.Timestamp
	0,  // 15: board_v1.BoardV1.GetBoard:input_type -> board_v1.GetRequestBoard
	2,  // 16: board_v1.BoardV1.GetTask:input_type -> board_v1.GetRequestTask
	4,  // 17: board_v1.BoardV1.GetTasks:input_type -> board_v1.GetRequestTasks
	6,  // 18: board_v1.BoardV1.GetSubtasks:input_type -> board_v1.GetRequestSubtasks
	8,  // 19: board_v1.BoardV1.GetUserAtBoard:input_type -> board_v1.GetRequestUserAtBoard
	10, // 20: board_v1.BoardV1.GetColumns:input_type -> board_v1.GetRequestColumns
	14, // 21: board_v1.BoardV1.GetStatus:input_type -> board_v1.GetRequestStatus
	16, // 22: board_v1.BoardV1.GetAllStatuses:input_type -> board_v1.GetRequestStatuses
	16, // 23: board_v1.BoardV1.GetReports:input_type -> board_v1.GetRequestStatuses
	20, // 24: board_v1.BoardV1.GetRoles:input_type -> board_v1.GetRequestRoles
	29, // 25: board_v1.BoardV1.PutColumn:input_type -> board_v1.Columns
	28, // 26: board_v1.BoardV1.PutReports:input_type -> board_v1.Reports
	22, // 27: board_v1.BoardV1.PutBoard:input_type -> board_v1.Boards
	23, // 28: board_v1.BoardV1.PutTask:input_type -> board_v1.Tasks
	24, // 29: board_v1.BoardV1.PutSubtask:input_type -> board_v1.Subtasks
	26, // 30: board_v1.BoardV1.PutComments:input_type -> board_v1.Comments
	25, // 31: board_v1.BoardV1.AddUserToBoard:input_type -> board_v1.UsersBoard
	29, // 32: board_v1.BoardV1.AddColumn:input_type -> board_v1.Columns
	28, // 33: board_v1.BoardV1.AddReports:input_type -> board_v1.Reports
	22, // 34: board_v1.BoardV1.CreateBoard:input_type -> board_v1.Boards
	23, // 35: board_v1.BoardV1.AddTask:input_type -> board_v1.Tasks
	24, // 36: board_v1.BoardV1.AddSubtask:input_type -> board_v1.Subtasks
	26, // 37: board_v1.BoardV1.AddComments:input_type -> board_v1.Comments
	10, // 38: board_v1.BoardV1.DeleteColumn:input_type -> board_v1.GetRequestColumns
	19, // 39: board_v1.BoardV1.DeleteReports:input_type -> board_v1.GetResponseReport
	1,  // 40: board_v1.BoardV1.DeleteBoard:input_type -> board_v1.GetResponseBoard
	3,  // 41: board_v1.BoardV1.DeleteTask:input_type -> board_v1.GetResponseTask
	7,  // 42: board_v1.BoardV1.DeleteSubtask:input_type -> board_v1.GetResponseSubtasks
	13, // 43: board_v1.BoardV1.DeleteComments:input_type -> board_v1.GetResponseComments
	1,  // 44: board_v1.BoardV1.GetBoard:output_type -> board_v1.GetResponseBoard
	3,  // 45: board_v1.BoardV1.GetTask:output_type -> board_v1.GetResponseTask
	5,  // 46: board_v1.BoardV1.GetTasks:output_type -> board_v1.GetResponseTasks
	7,  // 47: board_v1.BoardV1.GetSubtasks:output_type -> board_v1.GetResponseSubtasks
	9,  // 48: board_v1.BoardV1.GetUserAtBoard:output_type -> board_v1.GetResponseUserAtBoard
	11, // 49: board_v1.BoardV1.GetColumns:output_type -> board_v1.GetResponseColumns
	15, // 50: board_v1.BoardV1.GetStatus:output_type -> board_v1.GetResponseStatus
	17, // 51: board_v1.BoardV1.GetAllStatuses:output_type -> board_v1.GetResponseStatuses
	17, // 52: board_v1.BoardV1.GetReports:output_type -> board_v1.GetResponseStatuses
	21, // 53: board_v1.BoardV1.GetRoles:output_type -> board_v1.GetResponseRoles
	29, // 54: board_v1.BoardV1.PutColumn:output_type -> board_v1.Columns
	28, // 55: board_v1.BoardV1.PutReports:output_type -> board_v1.Reports
	22, // 56: board_v1.BoardV1.PutBoard:output_type -> board_v1.Boards
	23, // 57: board_v1.BoardV1.PutTask:output_type -> board_v1.Tasks
	24, // 58: board_v1.BoardV1.PutSubtask:output_type -> board_v1.Subtasks
	26, // 59: board_v1.BoardV1.PutComments:output_type -> board_v1.Comments
	25, // 60: board_v1.BoardV1.AddUserToBoard:output_type -> board_v1.UsersBoard
	29, // 61: board_v1.BoardV1.AddColumn:output_type -> board_v1.Columns
	28, // 62: board_v1.BoardV1.AddReports:output_type -> board_v1.Reports
	22, // 63: board_v1.BoardV1.CreateBoard:output_type -> board_v1.Boards
	23, // 64: board_v1.BoardV1.AddTask:output_type -> board_v1.Tasks
	24, // 65: board_v1.BoardV1.AddSubtask:output_type -> board_v1.Subtasks
	26, // 66: board_v1.BoardV1.AddComments:output_type -> board_v1.Comments
	32, // 67: board_v1.BoardV1.DeleteColumn:output_type -> google.protobuf.Empty
	32, // 68: board_v1.BoardV1.DeleteReports:output_type -> google.protobuf.Empty
	32, // 69: board_v1.BoardV1.DeleteBoard:output_type -> google.protobuf.Empty
	32, // 70: board_v1.BoardV1.DeleteTask:output_type -> google.protobuf.Empty
	32, // 71: board_v1.BoardV1.DeleteSubtask:output_type -> google.protobuf.Empty
	32, // 72: board_v1.BoardV1.DeleteComments:output_type -> google.protobuf.Empty
	44, // [44:73] is the sub-list for method output_type
	15, // [15:44] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_api_board_v1_service_proto_init() }
func file_api_board_v1_service_proto_init() {
	if File_api_board_v1_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_board_v1_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestBoard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponseBoard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponseTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestTasks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponseTasks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestSubtasks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponseSubtasks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestUserAtBoard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponseUserAtBoard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestColumns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponseColumns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestComments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponseComments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponseStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestStatuses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponseStatuses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponseReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequestRoles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponseRoles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Boards); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tasks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subtasks); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersBoard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Comments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Statuses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reports); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Columns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_board_v1_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Roles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_board_v1_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_board_v1_service_proto_goTypes,
		DependencyIndexes: file_api_board_v1_service_proto_depIdxs,
		MessageInfos:      file_api_board_v1_service_proto_msgTypes,
	}.Build()
	File_api_board_v1_service_proto = out.File
	file_api_board_v1_service_proto_rawDesc = nil
	file_api_board_v1_service_proto_goTypes = nil
	file_api_board_v1_service_proto_depIdxs = nil
}
